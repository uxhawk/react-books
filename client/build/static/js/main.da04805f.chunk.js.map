{"version":3,"sources":["utils/actions.js","utils/GlobalState.js","components/Navbar.js","utils/API.js","components/Card.js","components/SearchForm.js","pages/Search.js","components/SavedBookCard.js","components/EmptyCard.js","pages/SavedBooks.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_SEARCH_RESULTS","LOAD_FAVORITES","FILTER_SEARCH_RESULTS","PAGE_CHANGE","StoreContext","createContext","Provider","reducer","state","action","type","Object","objectSpread","searchResults","savedBooks","favorites","currentPage","page","StoreProvider","_ref","value","props","objectWithoutProperties","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","assign","useStoreContext","useContext","Navbar","_useStoreContext","_useStoreContext2","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","API","getBooks","axios","get","saveBook","bookData","post","title","author","description","smallThumbnail","infoLink","deleteBook","delete","searchForBooks","searchString","concat","Card","etag","saveBtnClick","event","target","getAttribute","bookToSave","filter","book","bookDetails","volumeInfo","authors","imageLinks","then","res","filterSearchResults","catch","err","console","log","addToSavedBooks","filteredArr","useEffect","src","canonicalVolumeLink","data-tag","onClick","SearchForm","searchRef","useRef","fetchBooks","string","data","items","current","length","Fragment","ref","aria-describedby","placeholder","preventDefault","searchBtnClick","map","components_Card","key","shortid","generate","Search","components_Navbar","components_SearchForm","SavedBookCard","removeBtnClick","btnId","data-id","_id","EmptyCard","SavedBooks","components_SavedBookCard","components_EmptyCard","App","react_router_dom","GlobalState_StoreProvider","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.da04805f.chunk.js","sourcesContent":["export const UPDATE_SEARCH_RESULTS = 'UPDATE_SEARCH_RESULTS';\nexport const LOAD_FAVORITES = 'LOAD_FAVORITES';\nexport const FILTER_SEARCH_RESULTS = 'FILTER_SEARCH_RESULTS';\nexport const PAGE_CHANGE = 'PAGE_CHANGE';\n","import React, { createContext, useReducer, useContext } from \"react\";\nimport { UPDATE_SEARCH_RESULTS, FILTER_SEARCH_RESULTS, LOAD_FAVORITES, PAGE_CHANGE } from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case UPDATE_SEARCH_RESULTS:\n    return {\n      ...state,\n      searchResults: action.searchResults,\n    };\n\n    case FILTER_SEARCH_RESULTS:\n        return {\n          ...state,\n          searchResults: action.searchResults,\n        };\n\n    case LOAD_FAVORITES:\n    return {\n        ...state,\n        savedBooks: action.favorites,\n        currentPage: action.page\n    };\n\n    case PAGE_CHANGE:\n      return {\n          ...state,\n          currentPage: action.page\n      };\n\n  default:\n    return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    savedBooks: [],\n    searchResults: [],\n    currentPage: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React, { useEffect } from 'react';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { PAGE_CHANGE } from '../utils/actions';\n\nconst Navbar = () => {\n    const [state, dispatch] = useStoreContext();\n\n    // function handlePageChange(page){\n    //     dispatch({\n    //         type: PAGE_CHANGE,\n    //         page: page,\n    //     })\n    // }\n    \n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\"> \n            <a className=\"navbar-brand\" href=\"/\">Google Books</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                <li className={state.currentPage === 'Search' ? \"nav-item active\": \"nav-item\"}>\n                    <a className=\"nav-link\" href=\"/\" >Search</a>\n                </li>\n                <li className={state.currentPage === 'Saved' ? \"nav-item active\": \"nav-item\"}>\n                    <a className=\"nav-link\" href=\"/saved\" >Saved</a>\n                </li>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;","import axios from \"axios\";\n\nexport default {\n  // Gets all posts\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", {\n      title: bookData.title,\n      author: bookData.author,\n      description: bookData.description,\n      smallThumbnail: bookData.smallThumbnail,\n      infoLink: bookData.infoLink,\n    });\n  },\n   deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  searchForBooks: function(searchString) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchString}&download=epub&key=AIzaSyDkBRoBfAczEqSC1zVbTZsz4HeadIRAULA`);\n  }\n};\n","import React, { useEffect } from 'react';\nimport '../App.css';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { FILTER_SEARCH_RESULTS, ADD_TO_FAVORITES } from '../utils/actions';\nimport API from '../utils/API';\n\nconst Card = (props) => {\n    const [state, dispatch] = useStoreContext();\n    let etag = '';\n\n    function saveBtnClick(event) {\n        etag = event.target.getAttribute('data-tag');\n        addToSavedBooks();\n        \n    }\n\n    function addToSavedBooks() {\n        const bookToSave = state.searchResults.filter((book) => etag === book.etag);\n        const bookDetails = {\n            title: bookToSave[0].volumeInfo.title,\n            author: bookToSave[0].volumeInfo.authors[0],\n            description: bookToSave[0].volumeInfo.description,\n            smallThumbnail: bookToSave[0].volumeInfo.imageLinks.smallThumbnail,\n            infoLink: bookToSave[0].volumeInfo.infoLink\n        }\n\n        API.saveBook(bookDetails)\n            .then(res => {\n                // dispatch({\n                //     type: ADD_TO_FAVORITES,\n                //     book: bookDetails,\n                // })\n                filterSearchResults();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function filterSearchResults() {\n        const filteredArr = state.searchResults.filter((book) => etag !== book.etag);\n        dispatch({\n            type: FILTER_SEARCH_RESULTS,\n            searchResults: filteredArr,\n        });\n    }\n\n    useEffect(() => {\n        if(etag === '') {\n            return\n        }\n        filterSearchResults();\n    }, []);\n    \n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"card mb-2\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                        <img src={props.book.volumeInfo.imageLinks.smallThumbnail}></img>\n                        </div>\n                        <div className=\"col-sm-10\">\n                        <h5 className=\"card-title\">{props.book.volumeInfo.title}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{props.book.volumeInfo.authors}</h6>\n                        <p className=\"card-text\">{props.book.volumeInfo.description}</p>\n                        <div className=\"mt-2 d-flex justify-content-end\">\n                        <a href={props.book.volumeInfo.canonicalVolumeLink} className=\"btn btn-raised btn-link\" target=\"_blank\">View Details</a>\n                        <button type=\"button\" className=\"ml-2 btn btn-raised btn-info\" data-tag={props.book.etag} onClick={(event) => saveBtnClick(event)}>Save</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useRef, useEffect } from 'react';\nimport API from '../utils/API';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { UPDATE_SEARCH_RESULTS } from '../utils/actions';\nimport Card from './Card';\nimport shortid from 'shortid';\n\nconst SearchForm = () => {\n    const [state, dispatch] = useStoreContext();\n    let searchRef = useRef();\n\n    function searchBtnClick(event) {\n        if (searchRef.current.value === '') {\n            return\n        }\n        event.preventDefault();\n        fetchBooks(searchRef.current.value);\n\n    }\n\n    function fetchBooks(string) {\n        API.searchForBooks(string)\n        .then((res) => {\n            // dispatch goes here\n            dispatch({\n                type: UPDATE_SEARCH_RESULTS,\n                searchResults: res.data.items,\n            })\n        })\n        .catch((err) => console.log(err));\n    searchRef.current.value = '';\n    }\n\n    useEffect(() => {\n        if (state.searchResults.length === 0) {\n            return;\n        }\n        fetchBooks(searchRef.current.value);\n    }, []);\n    \n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <form className=\"mt-5\">\n                        <div className=\"form-group\">\n                            <input ref={searchRef} type=\"text\" className=\"form-control\" id=\"bookSearchInput\" aria-describedby=\"emailHelp\" placeholder=\"Search for books and autors\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-raised btn-primary\" onClick={(event) => searchBtnClick(event)}>Search</button>\n                    </form>\n                </div>\n            </div>\n\n            {\n                state.searchResults.length === 0 ? \"\" : (\n                    state.searchResults.map((book) => {\n                        return <Card book={book} key={shortid.generate()} />\n                    })\n                )\n            }\n        </>\n    );\n};\n\nexport default SearchForm;","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport SearchForm from '../components/SearchForm';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { PAGE_CHANGE } from '../utils/actions';\n\nconst Search = () => {\n    const [state, dispatch] = useStoreContext();\n\n    function setPage() {\n        dispatch({\n            type: PAGE_CHANGE,\n            page: 'Search'\n        })\n    }\n    \n\n    useEffect(() => {\n        setPage();\n    }, [])\n    \n    return (\n        <>\n        <Navbar />\n        <SearchForm />\n        </>\n    );\n};\n\nexport default Search;","import React, { useEffect } from 'react';\nimport '../App.css';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { LOAD_FAVORITES } from '../utils/actions';\nimport API from '../utils/API';\n\nconst SavedBookCard = (props) => {\n    const [state, dispatch] = useStoreContext();\n    let id = ''\n    function removeBtnClick(event) {\n        id = event.target.getAttribute('data-id');\n        removeFavorite(id);\n    }\n\n    function removeFavorite(btnId) {\n        API.deleteBook(btnId)\n            .then(() => {\n                getSavedBooks()\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function getSavedBooks() {\n        API.getBooks()\n            .then((res) => {\n                dispatch({\n                    type: LOAD_FAVORITES,\n                    favorites: res.data,\n                    page: 'Saved'\n                })\n            })\n            .catch((err) => console.log(err));\n    }\n\n    // useEffect(() => {\n    //     getSavedBooks();\n    // }, [])\n    \n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"card mb-2\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                        <img src={props.book.smallThumbnail}></img>\n                        </div>\n                        <div className=\"col-sm-10\">\n                        <h5 className=\"card-title\">{props.book.title}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-muted\">{props.book.authors}</h6>\n                        <p className=\"card-text\">{props.book.description}</p>\n                        <div className=\"mt-2 d-flex justify-content-end\">\n                        <button type=\"button\" className=\"ml-2 btn btn-raised btn-danger\" data-id={props.book._id} onClick={(event) => {removeBtnClick(event)}}>Remove</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SavedBookCard;","import React from 'react'\n\nconst EmptyCard = () => {\n\n    \n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n                <div className=\"card mb-2\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                        <h5 className=\"card-title\">No saved books yet</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyCard;","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { useStoreContext } from '../utils/GlobalState';\nimport { LOAD_FAVORITES, PAGE_CHANGE } from '../utils/actions';\nimport API from '../utils/API';\nimport SavedBookCard from '../components/SavedBookCard';\nimport shortid from 'shortid';\nimport EmptyCard from '../components/EmptyCard';\n\nconst SavedBooks = () => {\n    const [state, dispatch] = useStoreContext();\n\n    function getSavedBooks() {\n        API.getBooks()\n            .then((res) => {\n                dispatch({\n                    type: LOAD_FAVORITES,\n                    favorites: res.data,\n                    page: 'Saved'\n                })\n            })\n            .catch((err) => console.log(err));\n    }\n\n    useEffect(() => {\n        getSavedBooks();\n    }, []);\n    \n    return (\n        <>\n        <Navbar />\n        <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3 my-3\">\n                <h2>Saved Books</h2>\n            </div>\n        </div>\n            {\n                state.savedBooks.length > 0 ? (\n                    state.savedBooks.map((book) => {\n                        return <SavedBookCard book={book} key={shortid.generate()}/>\n                    })\n                ) : <EmptyCard />\n            }\n        </>\n    );\n};\n\nexport default SavedBooks;","import React from 'react';\nimport { StoreProvider } from './utils/GlobalState';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from './pages/Search';\nimport SavedBooks from './pages/SavedBooks';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <StoreProvider> \n          <Switch>\n            <Route exact path={['/', '/search']} component={Search} />\n            <Route exact path='/saved' component={SavedBooks} />\n          </Switch>\n        </StoreProvider>\n      </>\n    </Router>\n\n    \n    \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}